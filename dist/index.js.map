{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar normalizeIndex = require( '@stdlib/ndarray-base-normalize-index' );\nvar indexFunction = require( '@stdlib/ndarray-base-ind' ).factory;\nvar take2d = require( '@stdlib/array-base-take2d' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar NDIMS = 3;\n\n\n// MAIN //\n\n/**\n* Takes elements from a three-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function does **not** deep copy nested array elements.\n*\n* @param {ArrayLikeObject<Collection>} x - input array\n* @param {NonNegativeIntegerArray} indices - list of indices\n* @param {integer} dimension - dimension along which to take elements\n* @param {string} mode - index mode specifying how to handle an index which is out-of-bounds\n* @throws {RangeError} third argument exceeds the number of dimensions\n* @throws {TypeError} fourth argument must be a recognized index mode\n* @returns {(Array<Array>|Array<Collection>)} output array\n*\n* @example\n* var x = [ [ [ 1, 2 ], [ 3, 4 ] ] ];\n* var indices = [ 1, 1, 0, 0, -1, -1 ];\n*\n* var y = take3d( x, indices, 2, 'normalize' );\n* // returns [ [ [ 2, 2, 1, 1, 2, 2 ], [ 4, 4, 3, 3, 4, 4 ] ] ]\n*/\nfunction take3d( x, indices, dimension, mode ) {\n\tvar lastIndex;\n\tvar out;\n\tvar dim;\n\tvar ind;\n\tvar idx;\n\tvar i;\n\n\tdim = normalizeIndex( dimension, NDIMS-1 );\n\tif ( dim === -1 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Third argument exceeds the number of dimensions. Number of dimensions: %d. Value: `%d`.', NDIMS, dimension ) );\n\t}\n\tout = [];\n\tif ( dim === 0 ) {\n\t\tind = indexFunction( mode );\n\t\tlastIndex = x.length - 1;\n\t\tfor ( i = 0; i < indices.length; i++ ) {\n\t\t\tidx = ind( indices[ i ], lastIndex );\n\t\t\tout.push( x[ idx ] );\n\t\t}\n\t\treturn out;\n\t}\n\t// Case: dim > 0\n\tdim = dimension - 1;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tout.push( take2d( x[ i ], indices, dim, mode ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = take3d;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Take elements from a three-dimensional nested array.\n*\n* @module @stdlib/array-base-take3d\n*\n* @example\n* var take3d = require( '@stdlib/array-base-take3d' );\n*\n* var x = [ [ [ 1, 2 ], [ 3, 4 ] ] ];\n* var indices = [ 1, 1, 0, 0, -1, -1 ];\n*\n* var y = take3d( x, indices, 2, 'normalize' );\n* // returns [ [ [ 2, 2, 1, 1, 2, 2 ], [ 4, 4, 3, 3, 4, 4 ] ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAiB,QAAS,sCAAuC,EACjEC,EAAgB,QAAS,0BAA2B,EAAE,QACtDC,EAAS,QAAS,2BAA4B,EAC9CC,EAAS,QAAS,uBAAwB,EAK1CC,EAAQ,EA2BZ,SAASC,EAAQC,EAAGC,EAASC,EAAWC,EAAO,CAC9C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAH,EAAMZ,EAAgBQ,EAAWJ,EAAM,CAAE,EACpCQ,IAAQ,GACZ,MAAM,IAAI,WAAYT,EAAQ,4GAA6GC,EAAOI,CAAU,CAAE,EAG/J,GADAG,EAAM,CAAC,EACFC,IAAQ,EAAI,CAGhB,IAFAC,EAAMZ,EAAeQ,CAAK,EAC1BC,EAAYJ,EAAE,OAAS,EACjBS,EAAI,EAAGA,EAAIR,EAAQ,OAAQQ,IAChCD,EAAMD,EAAKN,EAASQ,CAAE,EAAGL,CAAU,EACnCC,EAAI,KAAML,EAAGQ,CAAI,CAAE,EAEpB,OAAOH,CACR,CAGA,IADAC,EAAMJ,EAAY,EACZO,EAAI,EAAGA,EAAIT,EAAE,OAAQS,IAC1BJ,EAAI,KAAMT,EAAQI,EAAGS,CAAE,EAAGR,EAASK,EAAKH,CAAK,CAAE,EAEhD,OAAOE,CACR,CAKAZ,EAAO,QAAUM,ICrDjB,IAAIW,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "normalizeIndex", "indexFunction", "take2d", "format", "NDIMS", "take3d", "x", "indices", "dimension", "mode", "lastIndex", "out", "dim", "ind", "idx", "i", "main"]
}
